import { useDispatch } from 'react-redux';
import { handleMessageOpen, setMessage } from '../../../store/slices/messageCreated';
import { useCrudControlArchivos } from '../../../hooks';
import { useUploadArchivoMutation } from '../../../store/apis';

export const useLoadFile = () => {

  //* Dispatch de los mensajes correspondientes
  const dispatch = useDispatch();
  //* Hook que llama al rtk.query que proveer una funcion "addControlArchivo" para agregar 
  const { addControlArchivo } = useCrudControlArchivos();
  //* Rtk-Query que provee una funcion "uploadArchivo" para cargar el archivo en la ruta
  const [uploadArchivo] = useUploadArchivoMutation();

  //* Funcion que lee todo el txt
  const readFile = (valueFile, dataForCreate) => {

    if (!valueFile) return;

    const fileReader = new FileReader();

    fileReader.readAsText(valueFile);

    fileReader.onload = () => {

      //* Array en la primera linea
      const newDataArray = fileReader.result.split("\r\n");
      const oneLineArray = newDataArray.slice(0, 1);
      const countDataArray = oneLineArray[0].split("|");

      //* Mensaje de error si el archivo no tiene los 7 campos correspondientes en la primea linea
      if (countDataArray.length != 7) {
        dispatch(setMessage({ text: "El archivo no corresponde", severity: 'error' }))
        dispatch(handleMessageOpen());
        console.log(countDataArray.length);
      } else {
        //* Constante formData para enviar el archivo por la funcion "uploadArchivo"
        const fileFormData = new FormData();
        fileFormData.append("file", valueFile);
        uploadArchivo(fileFormData)
          .then((res) => {
            if (res.error) {
              dispatch(setMessage({
                text: `Lo sentimos, no se pudo cargar el archivo. 
                  Verifique que el archivo este correcto y que tenga permisos en la ruta.`,
                severity: 'error'
              }));
              dispatch(handleMessageOpen());
            } else {
              // //* Se aÃ±ade la data pasada por parametro para agregar una fila a tbControlArchivo a la base de datos
              addControlArchivo(dataForCreate);
              //* Mensaje de confirmacion
              dispatch(setMessage({ text: "El archivo se cargo correctamente", severity: 'success' }))
              dispatch(handleMessageOpen());
            }
          })
      }
    };

    //* Mensaje de error si sucede algo al leer el archivo */
    fileReader.onerror = () => {
      console.log(fileReader.error);
    };
  };

  return {
    readFile
  }
}